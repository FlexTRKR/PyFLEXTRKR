---
# ERA5 vorticity tracking configuration file

# Identify features to track
run_idfeature: True
# Track single consecutive feature files
run_tracksingle: True
# Run tracking for all files
run_gettracks: True
# Calculate feature statistics
run_trackstats: True
# Map tracking to pixel files
run_mapfeature: True
# Start/end date and time
startdate: '20120625.0000'
enddate: '20120630.2300'

# Parallel processing set up
# run_parallel: 1 (local cluster), 2 (Dask MPI)
run_parallel: 1
nprocesses: 20  # Number of processors to use if run_parallel=1

databasename: ERA5_VortPW_
# Specify date/time string format in the file name
# E.g., radar_20181101.011503.nc --> yyyymodd.hhmmss
# E.g., wrfout_2018-11-01_01:15:00 --> yyyy-mo-dd_hh:mm:ss
time_format: 'yyyy-mo-dd'
# Input files directory
clouddata_path: '/global/project/projectdirs/m1867/jmarquis/era5/smooth_test/'
# Working directory for the tracking data
root_path: '/global/cscratch1/sd/feng045/waccem/ERA5_VOR/'
# Working sub-directory names
tracking_path_name: 'tracking'
stats_path_name: 'stats'
pixel_path_name: 'vortracking'

# Specify types of feature being tracked
# This adds additional feature-specific statistics to be computed
feature_type: 'vorticity'

# Specify data structure
datatimeresolution: 1.0     # hours
pixel_radius: 25.0      # km
x_dimname: 'longitude'
y_dimname: 'latitude'
time_dimname: 'time'
field_varname: 'VOR600s10'
vor_thresh: 0.00004  # Min vorticity threshold
min_npix: 4   # Min number of pixels to define a feature

# Tracking parameters
timegap: 2.0           # hour
othresh: 0.3           # overlap percentage threshold
maxnclouds: 100       # Maximum number of features in one snapshot
nmaxlinks: 10          # Maximum number of overlaps that any single feature can be linked to
duration_range: [2, 300]   # A vector [minlength,maxlength] to specify the duration range for the tracks
# Flag to remove short-lived tracks [< min(duration_range)] that are not mergers/splits with other tracks
# 0:keep all tracks; 1:remove short tracks
remove_shorttracks: 1
# Set this flag to 1 to write a dense (2D) trackstats netCDF file
# Note that for datasets with lots of tracks, the memory consumption could be very large
trackstats_dense_netcdf: 1
# Minimum time difference threshold to match track stats with cloudid pixel files
match_pixel_dt_thresh: 60.0  # seconds

# Define tracked feature variable names
feature_varname: 'feature_number'
nfeature_varname: 'nfeatures'
featuresize_varname: 'npix_feature'

# Track statistics output file dimension names
tracks_dimname: 'tracks'
times_dimname: 'times'
fillval: -9999
pixeltracking_filebase: 'vortracks_'
