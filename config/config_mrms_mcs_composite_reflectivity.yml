---
# MRMS 2D reflectivity tracking configuration file

# Identify features to track
run_idfeature: True
# Track single consecutive feature files
run_tracksingle: True
# Run tracking for all files
run_gettracks: True
# Calculate feature statistics
run_trackstats: True
# Link merge/split tracks
run_mergesplit: True
# Map tracking to pixel files
run_mapfeature: True

# Start/end date and time
startdate: '20240817.1400'
enddate: '20240818.1300'

# Parallel processing set up
# run_parallel: 1 (local cluster), 2 (Dask MPI)
run_parallel: 1
nprocesses: 128  # Number of processors to use if run_parallel=1

databasename: MRMS_ReflectivityAtLowestAltitude_00.50_
# Specify date/time string format in the file name
# E.g., radar_20181101.011503.nc --> yyyymodd.hhmmss
# E.g., wrfout_2018-11-01_01:15:00 --> yyyy-mo-dd_hh:mm:ss
time_format: 'yyyymodd-hhmmss'
# Input files directory
clouddata_path: '/pscratch/sd/s/smheflin/MRMS_data/all_files_10min/'
# Working directory for the tracking data
root_path: '/pscratch/sd/f/feng045/usa/MRMS/'
# Working sub-directory names
tracking_path_name: 'tracking'
stats_path_name: 'stats'
pixel_path_name: 'mcstracking'

# Specify types of feature being tracked
# This adds additional feature-specific statistics to be computed
feature_type: 'generic'

# Specify data structure
datatimeresolution: 0.166667     # hours
pixel_radius: 1.0      # km
time_dimname: 'time'
x_dimname: 'longitude'
y_dimname: 'latitude'
time_coordname: 'time'
x_coordname: 'longitude'
y_coordname: 'latitude'
field_varname: 'reflectivity'

# Feature detection parameters
label_method: 'ndimage.label'
field_thresh: [20, 1000]  # variable thresholds
min_size: 10.0   # Min area to define a feature (km^2)
R_earth: 6378.0  # Earth radius (km)

# Tracking parameters
timegap: 1.0           # hour
othresh: 0.5           # overlap percentage threshold
maxnclouds: 1000       # Maximum number of features in one snapshot
nmaxlinks: 50          # Maximum number of overlaps that any single feature can be linked to
duration_range: [3, 150]   # A vector [minlength,maxlength] to specify the duration range for the tracks
# Flag to remove short-lived tracks [< min(duration_range)] that are not mergers/splits with other tracks
# 0:keep all tracks; 1:remove short tracks
remove_shorttracks: 1
# Set this flag to 1 to write a dense (2D) trackstats netCDF file
# Note that for datasets with lots of tracks, the memory consumption could be very large
trackstats_dense_netcdf: 1
# Minimum time difference threshold to match track stats with cloudid pixel files
match_pixel_dt_thresh: 60.0  # seconds

# Link merge/split parameters to main tracks
maintrack_area_thresh: 5000  # [km^2] Main track area threshold
maintrack_lifetime_thresh: 4  # [hour] Main track duration threshold
split_duration: 6  # [hour] Split tracks <= this length is linked to the main tracks
merge_duration: 6  # [hour] Merge tracks <= this length is linked to the main tracks

# Define tracked feature variable names
feature_varname: 'feature_number'
nfeature_varname: 'nfeatures'
featuresize_varname: 'npix_feature'

# Track statistics output file dimension names
tracks_dimname: 'tracks'
times_dimname: 'times'
fillval: -9999
# Output file base names
finalstats_filebase: 'trackstats_final_'
pixeltracking_filebase: 'mcstracks_'
